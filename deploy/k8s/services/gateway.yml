apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: web-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: "registry.io/web/gateway:latest"
          imagePullPolicy: IfNotPresent
          # resources:
          #   requests:
          #     memory: "128Mi"
          #     cpu: "500m"
          #   limits:
          #     memory: "128Mi"
          #     cpu: "500m"
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: "production"
            - name: API_PORT
              valueFrom:
                configMapKeyRef:
                  name: global-configmap
                  key: API_PORT
            - name: USER_SERVICE_HOST
              valueFrom:
                configMapKeyRef:
                  name: global-configmap
                  key: USER_SERVICE_HOST
          # readinessProbe:
          #   tcpSocket:
          #     port: 8080
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          # livenessProbe:
          #   initialDelaySeconds: 10
          #   httpGet:
          #     path: /status
          #     port: 8080
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: gateway-lb-service
#   namespace: web-service
# spec:
#   selector:
#     app: gateway
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 8080
# clusterIP: 10.0.171.239
# type: LoadBalancer
# status:
#   loadBalancer:
#     ingress:
#       - ip: 192.0.2.127
